
function getStatus(inibot)
    local status = {
        [BotStatus['offline']] = 'Offline',
        [BotStatus["online"]] = "Online",
        [BotStatus["account_banned"]] = "Banned",
        [BotStatus["location_banned"]] = "Location Banned",
        [BotStatus["server_overload"]] = "Overload",
        [BotStatus["too_many_login"]] = "Too Many Login",
        [BotStatus["maintenance"]] = "Maintenance",
        [BotStatus["version_update"]] = "Version Update",
        [BotStatus["server_busy"]] = "Server Busy",
        [BotStatus["error_connecting"]] = "Error Connecting",
        [BotStatus["logon_fail"]] = "Login Fail",
        [BotStatus["high_load"]] = "High Load",
        [BotStatus["changing_subserver"]] = "Changing Subserver",
        [BotStatus["account_restricted"]] = "Acc Restricted",
        [BotStatus["network_restricted"]] = "Network Restricted",
        [BotStatus["getting_server_data"]] =  "Getting Server",
        [BotStatus["bypassing_server_data"]] =  "Bypass",
        [BotStatus["http_block"]] =  "Http Block",
        [BotStatus["high_ping"]] =  "High Ping"
    }
    return status[inibot.status]
end

function getCpu()
    local str = "" 
    local cmd = io.popen("wmic cpu get loadpercentage /format:list")
    if cmd then 
        local output = cmd:read("*a")
        cmd:close()
        local cpu = output:match("LoadPercentage=(%w+)")
        if cpu then 
            str = str..cpu
        else 
            str = "0"
        end
    end
    return str
end

function getObgem()
    local obgem = 0 
    for _,botet in pairs(getBots()) do
        obgem = obgem + botet.obtained_gem_count
    end
    obtained = obtained + obgem
end

function numF(n)
  return tostring(math.floor(n)):reverse():gsub("(%d%d%d)","%1."):gsub(",(%-?)$","%1"):reverse()
end

function changeString(nama_,end_)
    local _end = math.floor(end_ * 2)
    if cecoredNameBot then
        local first = string.sub(nama_, 1, end_)
        local last = string.rep("x", string.len(nama_) - _end)
        return first .. 'xxx'
    else
        return nama_
    end
end

function getOnline()
    local count = 0 
    for _,on in pairs(getBots()) do 
        if on.status == BotStatus.online then 
            count = count + 1
        end
    end
    return count 
end

function getOffline()
    local count = 0 
    for _,of in pairs(getBots()) do 
        if of.status ~= BotStatus.online then 
            count = count + 1
        end
    end
    return count
end

function hook(msg, start)
    obtained = 0 
    getObgem()
    local syn = Webhook.new(allhook)
    local strStatus = ""
    local strScript = ""
    local cpuUsg = getCpu()
    local onlines = getOnline()
    local offlines = getOffline()
    if msg == msgId[1] then 
        syn.avatar_url = "https://cdn.discordapp.com/attachments/1180523579381665933/1180577805403181076/20231203_013427.png"
        syn.embed1.use = true 
        syn.embed1.title = "<:lucisyn:1240609594842026016> Alhook"
        syn.embed1.color = 16740100
        syn.embed1.thumbnail = "https://cdn.discordapp.com/attachments/1180523579381665933/1180577805403181076/20231203_013427.png"
        syn.embed1.description = "Total Obtained Gems : "..numF(obtained).." \nCPU : "..cpuUsg.."% \nOnline : "..onlines.."\nOffline  : "..offlines.."\nLast Update : <t:" .. os.time() .. ":R>"
    else 
        syn.avatar_url = "https://cdn.discordapp.com/attachments/1180523579381665933/1180577805403181076/20231203_013427.png"
        syn.embed1.use = true 
        syn.embed1.title = ""
        syn.embed1.color = 16740100
        syn.embed1.thumbnail = "https://cdn.discordapp.com/attachments/1180523579381665933/1180577805403181076/20231203_013427.png"
        syn.embed1.description = ""
    end
    local bots = getBots() -- Cache the bots list to avoid multiple calls to getBots()
    for i = start, math.min(start + 23, #bots) do
        local bot = bots[i]
        local strWorld = hideWorld and "||"..bot:getWorld().name:upper().."||" or bot:getWorld().name:upper()
        strStatus = bot.status == BotStatus.online and "<a:on:1233219436278841355> " or "<a:ping:1233214776880922757>"
        strScript = bot:isRunningScript() and "<:execut:1235455731197542453>" or "<:termi:1235456242957418507>"
        
        syn.embed1:addField("", "[ "..i.." ] "..changeString(bot.name:upper(), math.floor(string.len(bot.name) / 2))..
            " \n<:arrow:1231993245144318083> Status : "..strStatus..
            " "..getStatus(bot)..
            " \n<:arrow:1231993245144318083> Gems   : "..numF(bot.gem_count)..
            " \n<:arrow:1231993245144318083> Level  : "..bot.level..
            " \n<:arrow:1231993245144318083> Script : "..strScript..
            "\n<:arrow:1231993245144318083> World  : "..strWorld, true)
    end
    
    syn.embed1.footer.icon_url = "https://cdn.discordapp.com/attachments/1180523579381665933/1180577805403181076/20231203_013427.png"
    syn.embed1.footer.text = "Lucifer View Bot \n"..os.date("!%a %b %d, %Y at %I:%M %p", os.time() + 7 * 60 * 60)
    syn:edit(msg)
end

while true do
    local start = 1
    local bots = getBots() -- Cache the bots list to avoid multiple calls to getBots()
    local botCount = #bots -- Get the current bot count
    for s = 1, #msgId do
        for i = start, math.min(start + 23, botCount) do
            if i % 24 == 0 or i == botCount then 
                hook(msgId[s], start)
            end
            if start > botCount then 
                break
            end 
        end
        start = start + 24
    end
    sleep(delaySend * 1000)
end


